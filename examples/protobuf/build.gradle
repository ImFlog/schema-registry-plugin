plugins {
    id "com.github.imflog.kafka-schema-registry-gradle-plugin"
}

import com.github.imflog.schema.registry.Subject
import com.github.imflog.schema.registry.tasks.download.MetadataExtension

Subject locationAddressSubject = new Subject('location-address', 'schemas/protobuf/com/example/location-address.proto', 'PROTOBUF')
Subject locationCoordSubject = new Subject('location-latlong', 'schemas/protobuf/com/example/location-latlong.proto', 'PROTOBUF')

schemaRegistry {
    url = 'http://localhost:8081'
    quiet = false
    outputDirectory = 'schemas/protobuf/results/'
    pretty = true

    register {
        subject('company', 'schemas/protobuf/com/example/company.proto', 'PROTOBUF')
        subject('user', 'schemas/protobuf/com/example/user.proto', 'PROTOBUF')
                .addReference('company', 'company', 1)
        subject(locationAddressSubject)
        subject(locationCoordSubject)
        subject('my-record','schemas/protobuf/com/example/my-record.proto','PROTOBUF')
            .setMetadata('extra/metadata.json')
            .setRuleSet('extra/ruleSet.json')
            .setNormalized(true)
    }

    config {
        subject('company', 'FULL_TRANSITIVE')
        subject('user', 'FULL_TRANSITIVE')
        subject('location-address', 'FULL_TRANSITIVE')
        subject('location-latlong', 'FULL_TRANSITIVE')
    }

    download {
        metadata = new MetadataExtension(true)

//        subject('company', 'schemas/protobuf/downloaded') // Retrieved via reference from the user subject
        subject('user', 'schemas/protobuf/downloaded', true)
        subjectPattern('location.*', 'schemas/protobuf/downloaded/location')
    }

    compatibility {
        subject('company', 'schemas/protobuf/com/example/company_v2.proto', 'PROTOBUF')
        subject('user', 'schemas/protobuf/com/example/user.proto', 'PROTOBUF')
                .addReference('company', 'company', 1)
        subject(locationAddressSubject)
        subject(locationCoordSubject)
    }
}
